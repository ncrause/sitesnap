<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.1" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://www.oracle.com/webfolder/technetwork/jsc/xml/ns/javaee/web-app_3_1.xsd">
    <display-name>SiteSnap</display-name>
    <!--
		There are three means to configure Wickets configuration mode and they 
		are tested in the order given.
		
		1) A system property: -Dwicket.configuration 
		2) servlet specific <init-param> 
		3) context specific <context-param>

		The value might be either "development" (reloading when templates change) or 
		"deployment". If no configuration is found, "development" is the default. -->
    <filter>
        <filter-name>wicket.SiteSnap</filter-name>
        <filter-class>org.apache.wicket.protocol.http.WicketFilter</filter-class>
        <init-param>
            <param-name>applicationClassName</param-name>
            <param-value>sitesnap.WicketApplication</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>wicket.SiteSnap</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <servlet>
        <servlet-name>ClickServlet</servlet-name>
        <servlet-class>sitesnap.ClickServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>DbConsole</servlet-name>
        <servlet-class>org.h2.server.web.WebServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>PhotographServlet</servlet-name>
        <servlet-class>sitesnap.api.PhotographServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>ClickServlet</servlet-name>
        <url-pattern>/click</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>DbConsole</servlet-name>
        <url-pattern>/dbconsole/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>PhotographServlet</servlet-name>
        <url-pattern>/api/photograph</url-pattern>
    </servlet-mapping>
    <!-- <resource-ref>
        <description>Resource reference to a mail session factory.</description>
        <res-ref-name>mail/Session</res-ref-name>
        <res-type>javax.mail.Session</res-type>
        <res-auth>Container</res-auth>
        <res-sharing-scope>Shareable</res-sharing-scope>
    </resource-ref> -->
</web-app>
